---
Checks: '*,readability-identifier-naming,-google-build-using-namespace,-llvm-namespace-comment'
WarningsAsErrors: '*'
CheckOptions:
  - { key: readability-identifier-naming.ClassCase,                     value: CamelCase   }
  - { key: readability-identifier-naming.ClassConstantCase,             value: UPPER_CASE  }
  - { key: readability-identifier-naming.ClassMemberCase,               value: UPPER_CASE  }
  - { key: readability-identifier-naming.ClassMethodCase,               value: lower_case  }
  - { key: readability-identifier-naming.ConstantCase,                  value: UPPER_CASE  }
  - { key: readability-identifier-naming.ConstantMemberCase,            value: UPPER_CASE  }
  - { key: readability-identifier-naming.ConstantParameterCase,         value: lower_case  }
  - { key: readability-identifier-naming.ConstantPointerParameterCase,  value: lower_case  }
  - { key: readability-identifier-naming.ConstexprFunctionCase,         value: lower_case  }
  - { key: readability-identifier-naming.ConstexprMemberFunctionCase,   value: lower_case  }
  - { key: readability-identifier-naming.ConstexprVariableCase,         value: camelBack   }
  - { key: readability-identifier-naming.EnumCase,                      value: CamelCase   }
  - { key: readability-identifier-naming.EnumConstantCase,              value: CamelCase   }
  - { key: readability-identifier-naming.FunctionCase,                  value: lower_case  }
  - { key: readability-identifier-naming.GlobalConstantCase,            value: UPPER_CASE  }
  - { key: readability-identifier-naming.GlobalConstantPointerCase,     value: UPPER_CASE  }
  - { key: readability-identifier-naming.GlobalFunctionCase,            value: lower_case  }
  - { key: readability-identifier-naming.GlobalVariableCase,            value: lower_case  }
  - { key: readability-identifier-naming.InlineNamespaceCase,           value: CamelCase   }
  - { key: readability-identifier-naming.LocalConstantCase,             value: UPPER_CASE  }
  - { key: readability-identifier-naming.LocalConstantPointerCase,      value: UPPER_CASE  }
  - { key: readability-identifier-naming.LocalPointerCase,              value: camelBack   }
  - { key: readability-identifier-naming.LocalVariableCase,             value: camelBack   }
  - { key: readability-identifier-naming.MemberCase,                    value: lower_case  }
  - { key: readability-identifier-naming.MethodCase,                    value: lower_case  }
  - { key: readability-identifier-naming.NamespaceCase,                 value: lower_case  }
#  - { key: readability-identifier-naming.ParameterCase,                 value: camelBack   } # What does this do?
  - { key: readability-identifier-naming.PrivateMemberCase,             value: lower_case  }
  - { key: readability-identifier-naming.PrivateMemberPrefix,           value: '_'         }
  - { key: readability-identifier-naming.PrivateMethodCase,             value: lower_case  }
  - { key: readability-identifier-naming.PrivateMethodPrefix,           value: '_'         }
  - { key: readability-identifier-naming.ProtectedMemberCase,           value: lower_case  }
  - { key: readability-identifier-naming.ProtectedMethodCase,           value: lower_case  }
  - { key: readability-identifier-naming.PublicMemberCase,              value: lower_case  }
  - { key: readability-identifier-naming.PublicMethodCase,              value: lower_case  }
  - { key: readability-identifier-naming.StaticConstantCase,            value: UPPER_CASE  }
  - { key: readability-identifier-naming.StaticVariableCase,            value: lower_case  }
  - { key: readability-identifier-naming.StructCase,                    value: CamelCase   }
  - { key: readability-identifier-naming.TemplateParameterCase,         value: CamelCase   }
  - { key: readability-identifier-naming.TemplateTemplateParameterCase, value: CamelCase   }
  - { key: readability-identifier-naming.TypeAliasCase,                 value: CamelCase   }
#  - { key: readability-identifier-naming.TypedefCase,                   value: CamelCase   } # Just keep it consistent.
  - { key: readability-identifier-naming.TypeTemplateParameterCase,     value: CamelCase   }
  - { key: readability-identifier-naming.UnionCase,                     value: CamelCase   }
#  - { key: readability-identifier-naming.ValueTemplateParameterCase,    value: lower_case  } # What does this do?
  - { key: readability-identifier-naming.VariableCase,                  value: camelBack   }
  - { key: readability-identifier-naming.VirtualMethodCase,             value: lower_case  }
